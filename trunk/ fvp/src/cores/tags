!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.7	//
AR	Makefile	/^AR:=$(CROSS_COMPILE)ar$/;"	m
CC	test/Makefile	/^CC:=$(CROSS_COMPILE)gcc$/;"	m
CORES_H	cores.h	33;"	d
CROSS_COMPILE	Makefile	/^CROSS_COMPILE=arm-hismall-linux-$/;"	m
CROSS_COMPILE	test/Makefile	/^CROSS_COMPILE=arm-hismall-linux-$/;"	m
CXX	test/Makefile	/^CXX:=$(CROSS_COMPILE)g++$/;"	m
Cores	cores.h	/^typedef struct _Cores Cores;$/;"	t	typeref:struct:_Cores
GCC	Makefile	/^GCC:=$(CROSS_COMPILE)gcc$/;"	m
GXX	Makefile	/^GXX:=$(CROSS_COMPILE)g++$/;"	m
INCLUDES	test/Makefile	/^INCLUDES = -I..\/..\/common \\$/;"	m
LIBS	test/Makefile	/^LIBS=..\/libcores.a$/;"	m
LIB_NAME	Makefile	/^LIB_NAME:=.\/libcores.a$/;"	m
OBJ	Makefile	/^OBJ := $(SRC:.c=.o)$/;"	m
OBJ	test/Makefile	/^OBJ := $(SRC:.c=.o)$/;"	m
PARAMETER_DEV_FILE	parameter.c	38;"	d	file:
PARAMETER_H	parameter.h	33;"	d
Parameter	parameter.h	/^typedef struct _Parameter Parameter;$/;"	t	typeref:struct:_Parameter
ParameterInfo	parameter.h	/^typedef struct  _ParameterInfo  ParameterInfo;$/;"	t	typeref:struct:_ParameterInfo
SRC	Makefile	/^SRC = cores.c \\$/;"	m
SRC	test/Makefile	/^SRC = cores_test.c \\$/;"	m
_Cores	cores.c	/^struct _Cores$/;"	s	file:
_Parameter	parameter.h	/^struct _Parameter$/;"	s
cores_create	cores.c	/^Cores *cores_create()$/;"	f
cores_destroy	cores.c	/^void cores_destroy(Cores *thiz)$/;"	f
cores_init	cores.c	/^Ret cores_init(Cores *thiz)$/;"	f
cores_save_parameter	cores.c	/^int cores_save_parameter(Cores *thiz, SetupParameter *para)$/;"	f
main	test/cores_test.c	/^int main(int argc ,char *argv[])$/;"	f
main	test/parameter_test.c	/^int main(int argc, char *argv[])$/;"	f
parameter	cores.c	/^	Parameter *parameter;$/;"	m	struct:_Cores	file:
parameter_check_para	parameter.c	/^static Ret parameter_check_para(SetupParameter *para)$/;"	f	file:
parameter_create	parameter.c	/^Parameter *parameter_create()$/;"	f
parameter_default_all_para	parameter.c	/^static void parameter_default_all_para(SetupParameter *para)$/;"	f	file:
parameter_default_record_mode	parameter.c	/^static void parameter_default_record_mode(RecordMode *record_mode)$/;"	f	file:
parameter_destroy	parameter.c	/^void parameter_destroy(Parameter *thiz)$/;"	f
parameter_get_para	parameter.c	/^SetupParameter *parameter_get_para(Parameter *thiz)$/;"	f
parameter_init	parameter.c	/^Ret parameter_init(Parameter *thiz)$/;"	f
parameter_save_para	parameter.c	/^Ret parameter_save_para(Parameter *thiz)$/;"	f
parameter_set_para	parameter.c	/^Ret parameter_set_para(Parameter *thiz, SetupParameter *setup_para)$/;"	f
priv	parameter.h	/^	ParameterInfo *priv;$/;"	m	struct:_Parameter
setup_para	cores.c	/^	SetupParameter *setup_para;$/;"	m	struct:_Cores	file:
setup_para	parameter.h	/^	SetupParameter *setup_para;$/;"	m	struct:_Parameter
